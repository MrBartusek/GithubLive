{"version":3,"sources":["AppNavbar/AppNavbar.tsx","EventBadge/EventBadge.tsx","utils/actor.tsx","Event/Event.tsx","utils/utils.tsx","utils/eventType.tsx","utils/events.tsx","EventFeed/EventFeed.tsx","EventsList/EventList.tsx","FeedStatistics/FeedStatistics.tsx","RunningButton/RunningButton.tsx","FeedSettings/FeedSettings.tsx","App/App.tsx","index.tsx"],"names":["AppNavbar","Navbar","bg","variant","Container","Brand","React","Component","EventBadge","Icon","this","props","icon","Badge","pill","style","fontSize","ref","el","setProperty","color","size","content","actorURL","actor","login","endsWith","isActorBot","substr","length","Event","event","eventInfo","className","type","href","Image","height","minHeight","src","avatarUrl","rounded","header","payload","pull_request","user","avatar_url","issue","comment","release","author","replace","delay","time","a","Promise","resolve","setTimeout","EventType","EventColors","result","display_login","actorElement","repo","name","repoElement","commonRef","ref_type","commonRefElement","commit","commitId","commit_id","commitForCommentElement","COMMIT_COMMENT","GoComment","COMMENT","CREATE_TAG","SUCCESS","GoTag","CREATE_BRACH","GoGitBranch","CREATE_REPO","GoRepo","DELETE_TAG","DANGER","GoTrashcan","DELETE_BRACH","DELETE_REPO","forkee","html_url","full_name","forkeeElement","FORK_REPO","INFO","GoRepoForked","commits","sha","commitElement","PUSH","MISC","GoRepoPush","action","STAR_REPO","STAR","GoStar","issueElement","undefined","PR_COMMENT","EDIT","ISSUE_COMMENT","ISSUE","GoIssueOpened","GoIssueReopened","MERGE","GoIssueClosed","assignee","GoPerson","label","pullRequest","pullRequestElement","PR_REVIEW","GoEye","PR_REVIEW_COMMENT","PUBLIC","PR","GoGitPullRequest","merged","GoGitMerge","tag","releaseElement","RELEASE","GoListUnordered","member","memberElement","COLLABORATOR_ADD","WIKI_EDIT","GoBook","OTHER","GoQuestion","fontWeight","JSON","stringify","number","FeedStatus","EventList","abortController","state","events","animationDuration","AbortController","onResetFilters","bind","settings","running","updateFeed","prevProps","prevSettings","onStatusUpdate","STARTING","abort","filter","setState","poolingSpeed","onMissRateClear","lastEventId","signal","aborted","FETCHING","initialPoolingSpeed","octokit","activity","listPublicEvents","per_page","rawEvents","data","map","e","eventId","Number","id","eventsMissed","onMissRateUpdate","includes","Object","keys","values","indexOf","findIndex","x","NO_NEW_EVENTS","RUNNING","newElements","slice","unshift","pop","delayLen","Math","min","assign","onSettingsUpdate","enterAnimation","duration","totalFilters","selectedFilters","marginTop","Button","onClick","verticalAlign","FeedStatistics","missRate","eventsPerSecond","totalEventsPerSecond","Alert","round","ceil","Spinner","animation","RunningButton","showSpinner","status","width","FeedSettings","handleRunningClick","handleFilterChange","handlePoolingChange","handleTokenChange","Row","xs","md","Col","Form","Label","target","rel","Control","placeholder","isInvalid","githubToken","githubTokenValid","isValid","onChange","Text","max","step","disabled","value","options","entries","v","isMulti","selectedOption","valueAsNumber","EventFeed","newOctokit","missRateHistory","auth","Octokit","request","fetch","input","init","cache","newRate","newHistory","push","shift","newSettings","newState","rateLimit","get","then","resp","valid","resources","core","limit","catch","PAUSED","newStatus","history","reduce","b","getMissRate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca3403e.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Navbar } from 'react-bootstrap'\n\nexport default class AppNavbar extends React.Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>GithubLIVE</Navbar.Brand>\n        </Container>\n      </Navbar>\n      );\n    }\n}\n","import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport { IconType } from 'react-icons/lib';\n\nexport interface IProps {\n  icon: IconType,\n  content?: string,\n  color?: string,\n}\n\nexport default class EventBadge extends React.Component<IProps> {\n  render() {\n    const Icon = this.props.icon\n    return (\n      <Badge pill \n        style={{fontSize: 14}}\n        // This abomination is needed for marking background-color as important\n        // Thanks, React...\n        ref={(el) => el && el.style.setProperty(\"background-color\", this.props.color, \"important\")}\n      >\n        <Icon size={18}></Icon> {this.props.content}\n      </Badge>\n    );\n  }\n}\n","import { Endpoints } from '@octokit/types'\n\ntype ActorType = Endpoints[\"GET /events\"][\"response\"][\"data\"][0][\"actor\"]\n\nexport function isActorBot(actor: ActorType): boolean {\n    return actor.login.endsWith('[bot]')\n  }\n\nexport function  actorURL(actor: ActorType): string {\n    if(isActorBot(actor)) {\n        return `https://github.com/apps/${actor.login.substr(0, actor.login.length - 5)}`\n    }\n    return `https://github.com/${actor.login}`\n}","import React from 'react';\nimport './Event.scss'\nimport EventBadge from '../EventBadge/EventBadge'\nimport { Image } from 'react-bootstrap';\nimport { IEventInfo } from '../utils/events';\nimport { actorURL } from '../utils/actor';\n\nexport interface IProps{\n  eventInfo: IEventInfo\n}\n\nexport default class Event extends React.Component<IProps> {\n  render() {\n    const event = this.props.eventInfo;\n    if(event === null) return \"\"\n    return (\n      <div className=\"event\">\n        <EventBadge\n            color={event.color}\n            icon={event.icon}\n            content={event.type}\n          />\n        <div className=\"mt-3 d-flex\">\n          <div className=\"me-4 d-flex flex-column\">\n            <a href={actorURL(event.event.actor)}>\n              <Image height=\"80px\" style={{minHeight: \"80px\"}} src={this.avatarUrl(event) + \"?size=80\"} rounded />\n            </a>\n            <small className=\"text-center mt-1\">5 minutes ago</small>\n          </div>\n          <div>\n            {event.header}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  avatarUrl(eventInfo: IEventInfo) {\n    // event.actor.avatar_url doesn't contain valid avatar for bots for some reason\n    // this function gets their avatar from different sources \n\n    const event = eventInfo.event\n    let url = ''\n    if(event.type === \"PullRequestEvent\") {\n      url = (event.payload as any).pull_request.user.avatar_url\n    }\n    else if(event.type === \"IssuesEvent\") {\n      url = (event.payload as any).issue.user.avatar_url\n    }\n    else if(event.type === \"IssueCommentEvent\" || event.type === \"CommitCommentEvent\") {\n      url = (event.payload as any).comment.user.avatar_url\n    }\n    else if(event.type === \"ReleaseEvent\") {\n      url = (event.payload as any).release.author.avatar_url\n    }\n    else {\n      url = event.actor.avatar_url\n    }\n    return url.replace(\"?v=4\", \"\")\n  }\n}\n","export async function delay(time: number) {\n    return new Promise(resolve => setTimeout(resolve, time));\n}","enum EventType {\n    COMMIT_COMMENT = \"Commit Comment\", \n    CREATE_TAG = \"Create Tag\",\n    CREATE_BRACH = \"Create Branch\",\n    CREATE_REPO = \"Create Repository\",\n    DELETE_TAG = \"Delete Tag\",\n    DELETE_BRACH = \"Delete Branch\",\n    DELETE_REPO = \"Delete Repository\",\n    FORK_REPO = \"Fork\",\n    STAR_REPO = \"Star\",\n    COLLABORATOR_ADD = \"Collaborator Add\",\n    PUSH = \"Push\",\n    WIKI_EDIT = \"Wiki Edit\",\n    ISSUE = \"Issue\",\n    ISSUE_COMMENT = \"Issue Comment\",\n    PR = \"Pull Request\",\n    PR_COMMENT = \"Pull Request Comment\",\n    PR_REVIEW = \"Pull Request Review\",\n    PR_REVIEW_COMMENT = \"Pull Request Review Comment\",\n    PUBLIC = \"Public\",\n    RELEASE = \"Release\",\n    OTHER = \"Other\"\n}\n\nexport default EventType","import { Endpoints } from \"@octokit/types\"\nimport { GoBook, GoComment, GoEye, GoGitBranch, GoGitMerge, GoGitPullRequest, GoIssueClosed, GoIssueOpened, GoIssueReopened, GoListUnordered, GoPerson, GoQuestion, GoRepo, GoRepoForked, GoRepoPush, GoStar, GoTag, GoTrashcan } from \"react-icons/go\"\nimport { actorURL } from \"./actor\"\nimport EventType from \"./eventType\";\nimport { IconType } from \"react-icons\";\n\ntype EndpointEventType = Endpoints[\"GET /events\"][\"response\"][\"data\"][0];\n\nenum EventColors {\n    SUCCESS = \"#27ae60\",\n    DANGER = \"#c0392b\",\n    COMMENT = \"#2c3e50\",\n    STAR = \"#f1c40f\",\n    EDIT = \"#f39c12\",\n    MERGE = \"#9b59b6\",\n    INFO = \"#2980b9\",\n    MISC = \"#95a5a6\"\n}\n\n\nexport interface IEventInfo {\n    header: JSX.Element,\n    icon: IconType,\n    color: string,\n    type: EventType,\n    event: EndpointEventType\n}\n\nexport function eventInfo(event: EndpointEventType) : IEventInfo | null {\n    const result = {\n        event: event\n    }\n    const actor = actorElement(event)\n    const repo = repoElement(event)\n    const commonRef = commonRefElement(event)\n\n    if(event.type === \"CommitCommentEvent\") {\n        const commit = commitForCommentElement(event)\n        return {\n            ...result,\n            type: EventType.COMMIT_COMMENT,\n            icon: GoComment,\n            color: EventColors.COMMENT,\n            header: <span>{actor} commented on {commit} in {repo}</span>\n        }\n    }\n    else if(event.type === \"CreateEvent\") {\n        if((event.payload as any).ref_type === \"tag\") {\n            return {\n                ...result,\n                type: EventType.CREATE_TAG,\n                color: EventColors.SUCCESS,\n                icon: GoTag,\n                header: <span>{actor} created {commonRef} in {repo}</span>,\n            }\n        }\n        else if((event.payload as any).ref_type === \"branch\") {\n            return {\n                ...result,\n                type: EventType.CREATE_BRACH,\n                color: EventColors.SUCCESS,\n                icon: GoGitBranch,\n                header: <span>{actor} created {commonRef} in {repo}</span>,\n            }\n        }\n        else if((event.payload as any).ref_type === \"repository\") {\n            return {\n                ...result,\n                type: EventType.CREATE_REPO,\n                color: EventColors.SUCCESS,\n                icon: GoRepo,\n                header: <span>{actor} created new repository {repo}</span>,\n            }\n        }\n    }\n    else if(event.type === \"DeleteEvent\") {\n        if((event.payload as any).ref_type === \"tag\") {\n            return {\n                ...result,\n                type: EventType.DELETE_TAG,\n                color: EventColors.DANGER,\n                icon: GoTrashcan,\n                header: <span>{actor} deleted {commonRef} in {repo}</span>,\n            }\n        }\n        else if((event.payload as any).ref_type === \"branch\") {\n            return {\n                ...result,\n                type: EventType.DELETE_BRACH,\n                color: EventColors.DANGER,\n                icon: GoTrashcan,\n                header: <span>{actor} deleted {commonRef} in {repo}</span>,\n            }\n        }\n        else if((event.payload as any).ref_type === \"repository\") {\n            return {\n                ...result,\n                type: EventType.DELETE_REPO,\n                color: EventColors.DANGER,\n                icon: GoTrashcan,\n                header: <span>{actor} deleted {repo}</span>,\n            }\n        }\n    }\n    else if(event.type === \"ForkEvent\") {\n        const forkee = forkeeElement(event)\n        return {\n            ...result,\n            type: EventType.FORK_REPO,\n            color: EventColors.INFO,\n            icon: GoRepoForked,\n            header: <span>{actor} forked {forkee} from {repo}</span>,\n        }\n    }\n    else if(event.type === \"PushEvent\") {\n        const commit = commitElement(event)\n        if (commit === null) return null\n        return {\n            ...result,\n            type: EventType.PUSH,\n            color: EventColors.MISC,\n            icon: GoRepoPush,\n            header: <span>{actor} pushed {commit} into {repo}</span>,\n        }\n    }\n    else if(event.type === \"WatchEvent\") {\n        if(event.payload.action === \"started\") {\n            return {\n                ...result,\n                type: EventType.STAR_REPO,\n                color: EventColors.STAR,\n                icon: GoStar,\n                header: <span>{actor} starred {repo}</span>,\n            }\n        }\n    }\n    else if(event.type === \"IssueCommentEvent\") {\n        const issue = issueElement(event)\n        if(event.payload.issue?.pull_request !== undefined) {\n            if(event.payload.action === \"created\") {\n                return {\n                    ...result,\n                    type: EventType.PR_COMMENT,\n                    color: EventColors.COMMENT,\n                    icon: GoComment,\n                    header: <span>{actor} commented on pull request {issue} in {repo}</span>\n                }\n            }\n            else if(event.payload.action === \"deleted\") {\n                return {\n                    ...result,\n                    type: EventType.PR_COMMENT,\n                    color: EventColors.DANGER,\n                    icon: GoComment,\n                    header: <span>{actor} deleted comment on pull request {issue} in {repo}</span>\n                }\n            }\n            else if(event.payload.action === \"edited\") {\n                return {\n                    ...result,\n                    type: EventType.PR_COMMENT,\n                    color: EventColors.EDIT,\n                    icon: GoComment,\n                    header: <span>{actor} edited comment on pull request {issue} in {repo}</span>\n                }\n            }\n        }\n        else {\n            if(event.payload.action === \"created\") {\n                return {\n                    ...result,\n                    type: EventType.ISSUE_COMMENT,\n                    color: EventColors.COMMENT,\n                    icon: GoComment,\n                    header: <span>{actor} commented on issue {issue} in {repo}</span>\n                }\n            }\n            else if(event.payload.action === \"deleted\") {\n                return {\n                    ...result,\n                    type: EventType.ISSUE_COMMENT,\n                    color: EventColors.DANGER,\n                    icon: GoComment,\n                    header: <span>{actor} deleted comment on issue {issue} in {repo}</span>\n                }\n            }\n            else if(event.payload.action === \"edited\") {\n                return {\n                    ...result,\n                    type: EventType.ISSUE_COMMENT,\n                    color: EventColors.EDIT,\n                    icon: GoComment,\n                    header: <span>{actor} edited comment on issue {issue} in {repo}</span>\n                }\n            }\n        }\n    }\n    else if(event.type === \"IssuesEvent\") {\n        const issue = issueElement(event)\n        if(event.payload.action === \"opened\") {\n            return {\n                ...result,\n                type: EventType.ISSUE,\n                color: EventColors.SUCCESS,\n                icon: GoIssueOpened,\n                header: <span>{actor} opened issue {issue} in {repo}</span>\n            }\n        }\n        else if(event.payload.action === \"reopened\") {\n            return {\n                ...result,\n                type: EventType.ISSUE,\n                color: EventColors.SUCCESS,\n                icon: GoIssueReopened,\n                header: <span>{actor} reopened issue {issue} in {repo}</span>\n            }\n        }\n        else if(event.payload.action === \"closed\") {\n            return {\n                ...result,\n                type: EventType.ISSUE,\n                color: EventColors.MERGE,\n                icon: GoIssueClosed,\n                header: <span>{actor} closed issue {issue} in {repo}</span>\n            }\n        }\n        else if(event.payload.action === \"assigned\") {\n            const assignee = <a href={event.payload.issue?.assignee?.html_url}>{event.payload.issue?.assignee?.login}</a>\n            return {\n                ...result,\n                type: EventType.ISSUE,\n                color: EventColors.EDIT,\n                icon: GoPerson,\n                header: <span>{actor} assigned {assignee} to issue {issue} in {repo}</span>,\n            }\n        }\n        else if(event.payload.action === \"unassigned\") {\n            const assignee = <a href={event.payload.issue?.assignee?.html_url}>{event.payload.issue?.assignee?.login}</a>\n            return {\n                ...result,\n                type: EventType.ISSUE,\n                color: EventColors.EDIT,\n                icon: GoPerson,\n                header: <span>{actor} unassigned {assignee} from issue {issue} in {repo}</span>,\n            }\n        }\n        else if(event.payload.action === \"labeled\") {\n            const label = <code>{(event.payload as any).label.name}</code>\n            return {\n                ...result,\n                type: EventType.ISSUE,\n                color: EventColors.EDIT,\n                icon: GoTag,\n                header: <span>{actor} added label {label} to issue {issue} in {repo}</span>,\n            }\n        }\n        else if(event.payload.action === \"unlabeled\") {\n            const label = <code>{(event.payload as any).label.name}</code>\n            return {\n                ...result,\n                type: EventType.ISSUE,\n                color: EventColors.EDIT,\n                icon: GoTag,\n                header: <span>{actor} removed label {label} to issue {issue} in {repo}</span>,\n            }\n        }\n    }\n    else if(event.type === \"PullRequestReviewEvent\") {\n        const pullRequest = pullRequestElement(event)\n        if(event.payload.action === \"created\") {\n            return {\n                ...result,\n                type: EventType.PR_REVIEW,\n                color: EventColors.INFO,\n                icon: GoEye,\n                header: <span>{actor} reviewed {pullRequest} in {repo}</span>\n            }\n        }\n    }\n    else if(event.type === \"PullRequestReviewCommentEvent\") {\n        const pullRequest = pullRequestElement(event)\n        if(event.payload.action === \"created\") {\n            return {\n                ...result,\n                type: EventType.PR_REVIEW_COMMENT,\n                color: EventColors.COMMENT,\n                icon: GoComment,\n                header: <span>{actor} commented on review of {pullRequest} in {repo}</span>\n            }\n        }\n    }\n    else if(event.type === \"PublicEvent\") {\n        return {\n            ...result,\n            type: EventType.PUBLIC,\n            color: EventColors.SUCCESS,\n            icon: GoRepo,\n            header: <span>{actor} published new repository {repo}</span>,\n        }\n    }\n    else if(event.type === \"PullRequestEvent\") {\n        const pullRequest = pullRequestElement(event)\n        if(event.payload.action === \"opened\") {\n            return {\n                ...result,\n                type: EventType.PR,\n                color: EventColors.SUCCESS,\n                icon: GoGitPullRequest,\n                header: <span>{actor} opened pull request {pullRequest} in {repo}</span>,\n            }\n        }\n        else if(event.payload.action === \"reopened\") {\n            return {\n                ...result,\n                type: EventType.PR,\n                color: EventColors.SUCCESS,\n                icon: GoGitPullRequest,\n                header: <span>{actor} reopened pull request {pullRequest} in {repo}</span>,\n            }\n        }\n        else if(event.payload.action === \"closed\" && (event.payload as any).pull_request.merged) {\n            return {\n                ...result,\n                type: EventType.PR,\n                color: EventColors.MERGE,\n                icon: GoGitMerge,\n                header: <span>{actor} merged pull request {pullRequest} in {repo}</span>,\n            }\n        }\n        else if(event.payload.action === \"closed\" && !(event.payload as any).pull_request.merged) {\n            return {\n                ...result,\n                type: EventType.PR,\n                color: EventColors.DANGER,\n                icon: GoGitPullRequest,\n                header: <span>{actor} closed pull request {pullRequest} in {repo}</span>,\n            }\n        }\n    }\n    else if(event.type === \"ReleaseEvent\") {\n        const release = releaseElement(event)\n        if(event.payload.action === \"published\") {\n            return {\n                ...result,\n                type: EventType.RELEASE,\n                color: EventColors.INFO,\n                icon: GoListUnordered,\n                header: <span>{actor} published {release} (release) in {repo}</span>,\n            }\n        }\n    }\n    else if(event.type === \"MemberEvent\") {\n        const member = memberElement(event)\n        if(event.payload.action === \"added\") {\n            return {\n                ...result,\n                type: EventType.COLLABORATOR_ADD,\n                color: EventColors.EDIT,\n                icon: GoPerson,\n                header: <span>{actor} added {member} as collaborator to {repo}</span>,\n            }\n        }\n    }\n    else if(event.type === \"GollumEvent\") {\n        return {\n            ...result,\n            type: EventType.WIKI_EDIT,\n            color: EventColors.EDIT,\n            icon: GoBook,\n            header: <span>{actor} updated wiki for {repo}</span>,\n        }\n    }\n    return {\n        ...result,\n        type: EventType.OTHER,\n        color: EventColors.DANGER,\n        icon: GoQuestion,\n        header: (\n            <span style={{color: EventColors.DANGER, fontWeight: 600}}>\n                This event could not be loaded!<br />\n                <code>{JSON.stringify(event)}</code>\n            </span>\n        ),\n    }\n}\n\nfunction actorElement(event: EndpointEventType) {\n    const actor = event.actor\n    return <a className=\"font-weight-bold\" href={actorURL(actor)}>{actor.display_login || actor.login}</a>\n}\n\nfunction repoElement(event: EndpointEventType) {\n    const repo = event.repo;\n    return <a href={\"https://github.com/\" + repo.name}>{repo.name}</a>\n}\n\nfunction commonRefElement(event: EndpointEventType) {\n    return <span><code>{(event.payload as any).ref}</code> ({(event.payload as any).ref_type})</span>\n}\n\nfunction memberElement(event: EndpointEventType) {\n    const member = (event.payload as any).member;\n    return <a href={member.html_url}>{member.login}</a>\n}\n\nfunction releaseElement(event: EndpointEventType) {\n    const release = (event.payload as any).release;\n    const name = release.name && release.name.length > 0 ? release.name : release.tag\n    return <a href={release.html_url}><code>{name}</code></a>\n}\n\nfunction pullRequestElement(event: EndpointEventType) {\n    const pullRequest = (event.payload as any).pull_request\n    return <a href={pullRequest.html_url} className=\"font-weight-bold\">#{pullRequest.number}</a>\n}\n\nfunction issueElement(event: EndpointEventType) {\n    const issue = event.payload.issue\n    return <a href={issue?.html_url} className=\"font-weight-bold\">#{issue?.number}</a>\n}\n\nfunction commitElement(event: EndpointEventType) {\n    const commits = (event.payload as any).commits\n    if(commits.length === 0) {\n        return null\n    }\n    else if(commits.length === 1) {\n        const commitId = commits[0].sha\n        return <a href={`https://github.com/${event.repo.name}/commit/${commitId}`}><code>{commitId.substr(0, 8)}</code></a>\n    }\n    else {\n        return <span><code>{commits.length}</code> commits</span>\n    }   \n}\n\nfunction commitForCommentElement(event: EndpointEventType) {\n    const commitId = (event.payload.comment as any).commit_id;\n    return <a href={`https://github.com/${event.repo.name}/commit/${commitId}`}><code>{commitId.substr(0, 8)}</code></a>\n}\n\nfunction forkeeElement(event: EndpointEventType) {\n    const forkee = (event.payload as any).forkee\n    return <a href={forkee.html_url}>{forkee.full_name}</a>\n\n}\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport EventList from '../EventsList/EventList';\nimport { Octokit } from '@octokit/rest';\nimport FeedSettings from '../FeedSettings/FeedSettings'\nimport EventType from '../utils/eventType';\n\nexport interface IFeedSettings{\n  poolingSpeed: number\n  githubToken: string\n  filter: Array<EventType>\n  running: boolean\n  githubTokenValid: boolean,\n}\n\nexport enum FeedStatus {\n  STARTING = \"starting\",\n  PAUSED = \"paused\",\n  RUNNING = \"running\",\n  FETCHING = \"fetching\",\n  NO_NEW_EVENTS = \"no new events\"\n}\n\n\nexport interface IState{\n  octokit: Octokit,\n  missRateHistory: Array<number>\n  settings: IFeedSettings,\n  status: FeedStatus\n}\n\nexport default class EventFeed extends React.Component {\n  state: IState = {\n    octokit: this.newOctokit(),\n    missRateHistory: [],\n    settings: {\n      poolingSpeed: 60 * 1000,\n      githubToken: \"\",\n      githubTokenValid: false,\n      filter: [\"PUSH\" as EventType],\n      running: true\n    },\n    status: FeedStatus.STARTING\n  }\n\n  constructor(props) {\n    super(props);\n    this.onMissRateUpdate = this.onMissRateUpdate.bind(this)\n    this.onSettingsUpdate = this.onSettingsUpdate.bind(this)\n    this.onMissRateClear = this.onMissRateClear.bind(this)\n    this.onStatusUpdate = this.onStatusUpdate.bind(this)\n  }\n\n  newOctokit(auth?: string) {\n    return new Octokit({\n      request: {\n        // A small hack to don't cache any octokit calls\n        fetch: (input, init) => fetch(input, {...init, cache: 'no-cache'})\n      },\n      auth: auth\n    })\n  }\n\n  onMissRateUpdate(newRate: number) {\n    const newHistory = this.state.missRateHistory.slice();\n    newHistory.push(newRate);\n    if(newHistory.length > 5) {\n      newHistory.shift()\n    }\n    this.setState({missRateHistory: newHistory})\n  }\n\n  onMissRateClear() {\n    this.setState({missRateHistory: []})\n  }\n\n  async onSettingsUpdate(newSettings: IFeedSettings) {\n    // Validate new github token\n    const newState: IState = Object.assign({}, this.state)\n    if(this.state.settings.githubToken !== newSettings.githubToken) {\n      const octokit = this.newOctokit(newSettings.githubToken);\n      await octokit.rateLimit.get()\n        .then((resp) => {\n          const valid = resp.data.resources.core.limit > 1000\n          newSettings.githubTokenValid = valid\n        }).catch(() => {\n          newSettings.githubTokenValid = false\n        })\n        if(newSettings.githubTokenValid) {\n          newState.octokit = octokit\n        }\n    }\n    if(!newSettings.githubTokenValid) {\n      newSettings.poolingSpeed = 60 * 1000\n    }\n\n    if(!newSettings.running) {\n      newState.status = FeedStatus.PAUSED\n    }\n    newState.settings = newSettings\n    this.setState(newState)\n  }\n\n  onStatusUpdate(newStatus: FeedStatus) {\n    if(!this.state.settings.running && this.state.status === FeedStatus.PAUSED) return;\n    this.setState({status: newStatus})\n  }\n\n  getMissRate(): number {\n    const history = this.state.missRateHistory;\n    if(history.length === 0) return -1\n    const average = Number(history.reduce((a,b) => a + b, 0)) / history.length;\n    return average\n  }\n\n  render() {\n    return (\n        <Container className=\"mt-4\">\n            <FeedSettings\n              missRate={this.getMissRate()}\n              settings={this.state.settings}\n              status={this.state.status}\n              onSettingsUpdate={this.onSettingsUpdate}\n            />\n            <EventList \n              octokit={this.state.octokit}\n              settings={this.state.settings}\n              onMissRateUpdate={this.onMissRateUpdate}\n              onMissRateClear={this.onMissRateClear}\n              onSettingsUpdate={this.onSettingsUpdate}\n              onStatusUpdate={this.onStatusUpdate}\n            ></EventList>\n        </Container>\n      );\n    }\n}\n","import \"./EventList.scss\"\nimport React, { Fragment } from 'react';\nimport Event from '../Event/Event';\nimport { Octokit } from '@octokit/rest';\nimport FlipMove from \"react-flip-move\";\nimport { delay } from \"../utils/utils\";\nimport { eventInfo, IEventInfo } from \"../utils/events\";\nimport { IFeedSettings } from '../EventFeed/EventFeed'\nimport EventType from \"../utils/eventType\";\nimport { Button } from \"react-bootstrap\"\nimport { FeedStatus } from \"../EventFeed/EventFeed\"\n\nexport interface IState{\n  events: Array<IEventInfo>,\n  animationDuration: number\n}\n\nexport interface IProps {\n  octokit: Octokit\n  settings: IFeedSettings\n  onMissRateUpdate: (num: number) => void\n  onMissRateClear: () => void\n  onSettingsUpdate: (settings: IFeedSettings) => void\n  onStatusUpdate: (status: FeedStatus) => void,\n}\n\nexport default class EventList extends React.Component<IProps, IState> {\n  abortController: AbortController\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      events: [],\n      animationDuration: 100\n    }\n    this.abortController = new AbortController()\n    this.onResetFilters = this.onResetFilters.bind(this)\n  }\n\n  async componentDidMount() {\n    if(this.props.settings.running) {\n      return await this.updateFeed(this.abortController)\n    }\n  }\n\n  async componentDidUpdate(prevProps: IProps) {\n    const prevSettings = prevProps.settings\n    const settings = this.props.settings\n    if (prevSettings.running !== settings.running) {\n      if(settings.running) {\n        this.props.onStatusUpdate(FeedStatus.STARTING)\n        this.abortController = new AbortController()\n        return await this.updateFeed(this.abortController)\n      }\n      else {\n        this.abortController.abort()\n      }\n    }\n    if(prevSettings.filter !== settings.filter) {\n      this.setState({events: []})\n      if(settings.running) {\n        this.abortController.abort()\n        this.abortController = new AbortController()\n        return await this.updateFeed(this.abortController)\n      }\n    }\n\n    if(prevSettings.poolingSpeed !== settings.poolingSpeed) {\n      this.props.onMissRateClear()\n    }\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort()\n  }\n\n  async updateFeed(abortController: AbortController): Promise<void> {\n    const settings = this.props.settings\n    let lastEventId = 0;\n  \n    while(!abortController.signal.aborted) {\n      this.props.onStatusUpdate(FeedStatus.FETCHING)\n      const initialPoolingSpeed = this.props.settings.poolingSpeed;\n      const rawEvents = (await this.props.octokit.activity.listPublicEvents({\n        per_page: 100\n      })).data\n      let events = rawEvents.map((e) => eventInfo(e)).filter((e) => !!e) as IEventInfo[];\n\n      // Calculate missed events rate\n      const eventId = Number(events[events.length - 1]?.event.id);\n      if (lastEventId > 0) {\n        const eventsMissed = (eventId - lastEventId)\n        if(eventsMissed !== 0) {\n          this.props.onMissRateUpdate(100 / (eventsMissed + 100))\n        }\n      }\n      lastEventId = eventId;\n\n      // Filter events\n      events = events.filter((e) => !settings.filter.includes(Object.keys(EventType)[Object.values(EventType).indexOf(e.type)] as any))\n      // Remove duplicates\n      events = events.filter((e) => this.state.events.findIndex(x => x.event.id === e.event.id) === -1)\n\n      // Slowly push all events\n      if(events.length === 0) {\n        this.props.onStatusUpdate(FeedStatus.NO_NEW_EVENTS)\n        await delay(this.props.settings.poolingSpeed)\n      }\n      for await(const e of events) {\n        this.props.onStatusUpdate(FeedStatus.RUNNING)\n        if(abortController.signal.aborted) break;\n        const newElements = this.state.events.slice()\n        newElements.unshift(e)\n        if(newElements.length > 100) {\n          newElements.pop()\n        }\n        if(this.props.settings.poolingSpeed !== initialPoolingSpeed) {\n          // Pooling speed was changed during processing so the miss rate\n          // shouldn't be calculated\n          lastEventId = 0\n        }\n\n        const delayLen = this.props.settings.poolingSpeed / events.length\n        this.setState({events: newElements, animationDuration: Math.min(delayLen - 10, 250)});\n        await delay(delayLen)\n      }\n    }\n  }\n\n  onResetFilters(event: React.MouseEvent<HTMLElement>) {\n    const settings = Object.assign({}, this.props.settings);\n    settings.filter = [\"PUSH\" as EventType] as Array<EventType>\n    this.props.onSettingsUpdate(settings)\n  }\n\n  render() {\n    if(this.state.events.length > 0) {\n      return (\n        <FlipMove \n          enterAnimation='none'\n          duration={this.state.animationDuration < 240 ? 0 : this.state.animationDuration}\n        >\n          {this.state.events.map((eventInfo) => (\n            <Event key={eventInfo.event.id} eventInfo={eventInfo}></Event>\n          ))}\n        </FlipMove>\n      );\n    } else {\n      const totalFilters = Object.values(EventType).length - 1\n      const selectedFilters = this.props.settings.filter.length\n      return (\n        <p className=\"lead text-center\" style={{marginTop: '100px'}}>\n          {selectedFilters >= totalFilters ? \n            \"You have excluded all of the events. \" : \"Waiting for new events... \"\n          }\n          {selectedFilters > 12 ? \n            <Fragment>\n              <span>You can try to </span>\n              <Button\n                variant=\"link\"\n                className=\"p-0\"\n                onClick={this.onResetFilters}\n                style={{fontSize:\"1.25rem\", fontWeight: 300, verticalAlign: 'baseline'}}\n              >\n                  reset your filters\n              </Button>.\n            </Fragment> : \"\"}\n        </p>\n      )\n    }\n  }\n}\n","import React from \"react\"\nimport { Alert, Spinner } from \"react-bootstrap\";\n\nexport interface IProps {\n    missRate: number,\n    poolingSpeed: number,\n}\n\nexport default class FeedStatistics extends React.Component<IProps> {\n    render() {\n        const missRate = this.props.missRate\n        const eventsPerSecond = 60 / (this.props.poolingSpeed / 1000) * 100;\n        const totalEventsPerSecond = eventsPerSecond / missRate\n        return (\n            <Alert variant='secondary'>\n              {missRate > 0 ? (<>\n                Using the current pooling speed, this feed display only around {' '}\n                <b>{Math.round((missRate * 100) * 10) / 10}%</b> {' '}\n                of the total Github activity. That's {' '}\n                <b>{Math.round(eventsPerSecond)} events per minute</b> {' '}\n                out of total of around {' '}\n                <b>{Math.round(Math.ceil(totalEventsPerSecond / 100) * 100)} events per minute</b>! {' '}\n              </>) : (<><Spinner animation=\"border\" size='sm' /> <span>Calculating statistics...</span></>)}\n            </Alert>\n        )\n    }\n}","import './RunningButton.scss'\nimport React from \"react\"\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { BsPauseFill, BsPlayFill } from 'react-icons/bs';\nimport { FeedStatus } from '../EventFeed/EventFeed';\n\nexport interface IProps {\n    onClick: (e: React.MouseEvent<HTMLElement>) => void,\n    running: boolean,\n    status: FeedStatus,\n    showSpinner: boolean\n}\n\nexport default class RunningButton extends React.Component<IProps> {\n    render() {\n        return (\n            <div className=\"d-flex justify-content-end align-items-center mt-3\">\n                <span className=\"text-muted me-2\">\n                    {this.props.showSpinner ? (<Spinner animation='border' size='sm' />) : \"\"} {this.props.status}\n                </span>\n                <Button \n                    className=\"float-right\"\n                    size=\"sm\"\n                    style={{width: 42, height: 42}}\n                    variant={this.props.running ? \"success\" : \"danger\"}\n                    onClick={this.props.onClick}\n                >\n                    {this.props.running ? <BsPauseFill size={24}/> : <BsPlayFill size={24}/>}\n                </Button>\n            </div>\n        )\n    }\n}","import \"./FeedSettings.scss\"\nimport React from 'react';\nimport { FeedStatus, IFeedSettings } from \"../EventFeed/EventFeed\";\nimport Select from 'react-select'\nimport EventType from \"../utils/eventType\";\nimport { Container, Row, Col, Form} from \"react-bootstrap\";\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport FeedStatistics from '../FeedStatistics/FeedStatistics'\nimport RunningButton from \"../RunningButton/RunningButton\";\n\nexport interface IProps {\n  settings: IFeedSettings\n  status: FeedStatus\n  missRate: number\n  onSettingsUpdate: (settings: IFeedSettings) => void;\n}\n\nexport default class FeedSettings extends React.Component<IProps> {\n  constructor(props) {\n    super(props)\n    this.handleRunningClick = this.handleRunningClick.bind(this)\n    this.handleFilterChange = this.handleFilterChange.bind(this)\n    this.handlePoolingChange = this.handlePoolingChange.bind(this)\n    this.handleTokenChange = this.handleTokenChange.bind(this)\n  }\n\n  render() {\n    const settings = this.props.settings\n    return (\n      <Container className=\"settings\">\n        <h3 className=\"mb-4\">Settings</h3>\n        <Row xs={1} md={2}>\n          <Col className=\"col-md-6\">\n            <Form.Label>\n              Github Personal Token {' - '}\n              <a href=\"https://github.com/settings/tokens/new?description=GithubLIVE\" target=\"_blank\" rel=\"noreferrer\">\n                generate new token\n              </a>\n            </Form.Label>\n            <Form.Control \n              type=\"password\"\n              placeholder=\"ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n              isInvalid={settings.githubToken !== \"\" && !settings.githubTokenValid}\n              isValid={settings.githubToken !== \"\" && settings.githubTokenValid}\n              onChange={this.handleTokenChange}\n            />\n            <Form.Text className=\"text-muted\">\n              Providing authentication token is not required but highly recommended.\n            </Form.Text>\n          </Col>\n          <Col className=\"col-md-6\">\n            <Form.Label>Pooling speed</Form.Label>\n            <div className=\"d-flex align-items-center\">\n              <span>Fast</span>\n              <RangeSlider\n                min={15} \n                max={100}\n                step={5}\n                disabled={!settings.githubTokenValid}\n                value={settings.poolingSpeed / 1000}\n                onChange={this.handlePoolingChange}\n              />\n              <span>Slow</span>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"mt-2\">\n          <Col className=\"col-md-12\">\n            <Form.Label>Events to exclude</Form.Label>\n            <Select\n              options={\n                Object.entries(EventType)\n                  .filter(([t, s]) => s !== EventType.OTHER)\n                  .map(([t, s]) => ({value: t as EventType, label: s as string}))\n                }\n              value={settings.filter.map((v) => ({value: v, label: EventType[v]}))}\n              isMulti={true}\n              onChange={this.handleFilterChange}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col className=\"col-md-12\">\n            <FeedStatistics missRate={this.props.missRate} poolingSpeed={settings.poolingSpeed} />\n          </Col>\n        </Row>\n        <RunningButton\n          running={settings.running}\n          status={this.props.status}\n          showSpinner={[FeedStatus.FETCHING, FeedStatus.STARTING].includes(this.props.status)}\n          onClick={this.handleRunningClick}\n        />\n      </Container>\n    );\n  }\n\n  handleFilterChange(selectedOption) {\n    const settings = Object.assign({}, this.props.settings);\n    settings.filter = selectedOption.map(x => x.value)\n    this.props.onSettingsUpdate(settings)\n  };\n\n  handlePoolingChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const settings = Object.assign({}, this.props.settings);\n    settings.poolingSpeed = e.target.valueAsNumber * 1000\n    this.props.onSettingsUpdate(settings)\n  }\n\n  handleTokenChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const settings = Object.assign({}, this.props.settings);\n    settings.githubToken = e.target.value\n    this.props.onSettingsUpdate(settings)\n  }\n\n  handleRunningClick(e: React.MouseEvent<HTMLElement>) {\n    const settings = Object.assign({}, this.props.settings);\n    settings.running = !settings.running;\n    this.props.onSettingsUpdate(settings)\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport { Fragment } from 'react';\nimport EventFeed from '../EventFeed/EventFeed'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n        <Fragment>\n          <AppNavbar></AppNavbar>\n          <EventFeed></EventFeed>\n        </Fragment>\n      );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}